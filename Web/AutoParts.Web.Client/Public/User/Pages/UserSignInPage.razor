@page "/sign-in"

@inject Public.User.Services.UserSignInService signInService
@inject NavigationManager navigationManager

@using Public.User.Models;

<div class="container text-center">
    <EditForm class="form-signin" Model="@signInForm" OnValidSubmit="HandleValidSubmit">
        <h1 class="h3 mb-3 font-weight-normal">
            Please sign in
        </h1>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="my-3 alert-danger">
                @ErrorMessage
            </div>
        }

        <DataAnnotationsValidator />

        <InputText id="email" class="form-control mb-2" placeholder="Email address" @bind-Value="signInForm.Email" />
        <InputText id="password" class="form-control" placeholder="Password" type="password" @bind-Value="signInForm.Password" />

        <button class="btn btn-lg btn-primary btn-block mt-3" type="submit">
            Sign In
        </button>
    </EditForm>
</div>

@code {
    protected UserSignInFormModel signInForm = new UserSignInFormModel();

    protected string ErrorMessage { get; set; }

    protected async Task HandleValidSubmit()
    {
        var success = await signInService.SignIn(signInForm);

        if (success)
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Invalid username or password";
        }
    }
}