@page "/sign-up"

@inject Public.User.Services.UserSignUpService signUpService

@using Public.User.Models;

<div class="container text-center">
    <EditForm class="form-signup" Model="@signUpForm" OnValidSubmit="HandleValidSubmit">
        <h1 class="h3 mb-3 font-weight-normal">
            Create a new account
        </h1>

        <DataAnnotationsValidator />
        <div class="text-left">
            <ValidationSummary />
        </div>

        <InputText id="first-name" class="form-control" placeholder="First name" @bind-Value="signUpForm.FirstName" />
        <InputText id="last-name" class="form-control" placeholder="Last name" @bind-Value="signUpForm.LastName" />
        <InputText id="email" class="form-control" placeholder="Email address" @bind-Value="signUpForm.Email" />
        <InputText id="password" class="form-control" placeholder="Password" type="password" @bind-Value="signUpForm.Password" />
        <InputText id="password-confirmation" class="form-control" placeholder="Confirm password" type="password" @bind-Value="signUpForm.PasswordConfirmation" />

        <button class="btn btn-lg btn-primary btn-block mt-3" type="submit">
            Sign Up!
        </button>
    </EditForm>
</div>

@code {
    public UserSignUpFormModel signUpForm = new UserSignUpFormModel();

    public async Task HandleValidSubmit()
    {
        var success = await signUpService.SignUp(signUpForm);
    }
}