@inherits LayoutComponentBase

@inject Services.CurrentUserProvider currentUserProvider
@inject Services.CurrentUserService currentUserService
@inject NavigationManager navigationManager

@using Utils;
@using Protos;

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        @if (currentUserProvider.LoadingUserInfo)
        {
            <p class="mb-0 font-italic">Loading...</p>
        }
        else if (currentUserProvider.IsLoggedIn)
        {
            <p class="mb-0">Hello, <b>@currentUserProvider.CurrentUserInfo.FirstName @currentUserProvider.CurrentUserInfo.LastName!</b></p>
            <NavLink class="ml-4" @onclick="SignOut">
                Sign Out
            </NavLink>
        }
        else
        {
            <NavLink class="ml-md-auto" href="sign-in">
                Sign In
            </NavLink>
            <NavLink class="ml-4 btn btn-md btn-primary" href="sign-up">
                Sign Up
            </NavLink>
        }
    </div>

    <div class="content px-4">
        @if (Loading)
        {
            <p class="font-italic">Loading...</p>
        }
        else
        {
            @Body
        }
    </div>
</div>

@code {
    public bool Loading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        currentUserProvider.AddEventListenerOnLoadedUserInfo(HandleUserInfoLoaded);

        await currentUserService.SyncCurrentUserInfo();
    }

    private async Task SignOut()
    {
        await currentUserService.SignOut();
    }

    private void HandleUserInfoLoaded()
    {
        var currentUserType = currentUserProvider.IsLoggedIn
            ? (UserType?)currentUserProvider.CurrentUserInfo.UserType
            : null;

        if (!navigationManager.CanActivateCurrentRoute(currentUserType))
        {
            navigationManager.NavigateTo(string.Empty);
        }

        Loading = false;

        StateHasChanged();
    }
}
