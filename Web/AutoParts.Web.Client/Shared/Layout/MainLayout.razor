@inherits LayoutComponentBase

@inject Services.CurrentUserProvider currentUserProvider
@inject Services.CurrentUserService currentUserService
@inject NavigationManager navigationManager

@using Utils;
@using Protos;

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        @if (currentUserProvider.LoadingUserInfo)
        {
            <p class="mb-0 font-italic">Loading...</p>
        }
        else if (currentUserProvider.IsLoggedIn)
        {
            <div class="btn-group">
                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="oi oi-person mr-2" aria-hidden="true"></span>
                    @currentUserProvider.CurrentUserInfo.FirstName @currentUserProvider.CurrentUserInfo.LastName
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    <p class="dropdown-item">
                        Signed in as <br />
                        <em>@currentUserProvider.CurrentUserInfo.Email</em>
                    </p>
                    <div class="dropdown-divider"></div>

                    @if (currentUserProvider.CurrentUserInfo.UserType != UserType.Administrator)
                    {
                        <NavLink class="dropdown-item" href="profile">
                            Your profile
                        </NavLink>
                    }

                    @if (currentUserProvider.CurrentUserInfo.UserType == UserType.Administrator)
                    {
                        <NavLink class="dropdown-item" href="manage-suppliers">
                            Manage suppliers
                        </NavLink>
                        <NavLink class="dropdown-item" href="manage-car-brands">
                            Manage car brands
                        </NavLink>
                    }

                    @if (currentUserProvider.CurrentUserInfo.UserType == UserType.Supplier)
                    {
                        <NavLink class="dropdown-item" href="@CurrentUserSupplierProfileLink">
                            Your public supplier profile
                        </NavLink>
                    }

                    <div class="dropdown-divider"></div>
                    <NavLink class="dropdown-item" href="help">
                        Help
                    </NavLink>
                    <NavLink class="dropdown-item" href="#" @onclick="SignOut">
                        Sign out
                    </NavLink>
                </div>
            </div>
        }
        else
        {
            <NavLink class="ml-md-auto" href="sign-in">
                Sign In
            </NavLink>
            <NavLink class="ml-4 btn btn-md btn-primary" href="sign-up">
                Sign Up
            </NavLink>
        }
    </div>

    <div class="content px-4">
        @if (Loading)
        {
            <p class="font-italic">Loading...</p>
        }
        else
        {
            @Body
        }
    </div>
</div>

@code {
    public bool Loading { get; set; } = true;
    public string CurrentUserSupplierProfileLink => $"supplier/{currentUserProvider.CurrentUserInfo.Id}";

    protected override async Task OnInitializedAsync()
    {
        currentUserProvider.AddEventListenerOnLoadedUserInfo(HandleUserInfoLoaded);

        await currentUserService.SyncCurrentUserInfo();
    }

    private async Task SignOut()
    {
        await currentUserService.SignOut();
    }

    private void HandleUserInfoLoaded()
    {
        var currentUserType = currentUserProvider.IsLoggedIn
            ? (UserType?)currentUserProvider.CurrentUserInfo.UserType
            : null;

        if (!navigationManager.CanActivateCurrentRoute(currentUserType))
        {
            navigationManager.NavigateTo(string.Empty);
        }

        Loading = false;

        StateHasChanged();
    }
}
